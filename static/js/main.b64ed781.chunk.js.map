{"version":3,"sources":["Counter.module.css","components/Table.tsx","components/Button.tsx","BLL/counterReducer.ts","CounterRedux.tsx","App.tsx","BLL/store.ts","index.tsx"],"names":["module","exports","Table","props","className","value","max","s","red","count","min","Button","btn","disabled","disable","onClick","callback","nameButton","initialState","isDisabledSet","isDisabledBtn","CounterRedux","useSelector","state","counter","dispatch","useDispatch","useEffect","maxLoc","localStorage","getItem","minLoc","numMin","JSON","parse","type","n","numMax","numMaxAC","wrapper","style","color","inp","placeholder","onChange","e","maxValueHandlerAC","currentTarget","startValueHandlerAC","buttons","App","rootReducer","combineReducers","action","setItem","stringify","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b64ed781.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Counter_wrapper__3u92Y\",\"buttons\":\"Counter_buttons__26tmG\",\"btn\":\"Counter_btn__3qF7A\",\"count\":\"Counter_count__9BcjU\",\"red\":\"Counter_red__1Kgtl\",\"inp\":\"Counter_inp__1Hu9z\"};","import React from \"react\";\nimport s from \"../Counter.module.css\";\n\ntype propsType = {\n  value: number | string;\n  max: number;\n  min: number;\n};\n\nexport const Table = (props: propsType) => {\n  return (\n    <div className={props.value === props.max ? s.red : s.count}>\n      {props.max < props.min\n        ? \"Min > Max\"\n        : props.min < 0 || props.max < 0\n        ? \"Минус нельзя!\"\n        : props.value}\n    </div>\n  );\n};\n\n","import React from \"react\";\nimport s from \"../Counter.module.css\";\n\ntype propsType = {\n  callback: () => void;\n  nameButton: string;\n  disable?: boolean;\n};\n\nexport const Button = (props: propsType) => {\n  const onClickHandler = () => {\n    props.callback();\n  };\n\n  return (\n    <button className={s.btn} disabled={props.disable} onClick={onClickHandler}>\n      {props.nameButton}\n    </button>\n  );\n};\n","type startValueHandlerACType = ReturnType<typeof startValueHandlerAC>;\ntype maxValueHandlerACType = ReturnType<typeof maxValueHandlerAC>;\ntype setBtnACType = ReturnType<typeof setBtnAC>;\ntype resetValueIncACType = ReturnType<typeof resetValueIncAC>;\ntype valueIncACType = ReturnType<typeof valueIncAC>;\ntype numMaxACType = ReturnType<typeof numMaxAC>;\ntype numMinACType = ReturnType<typeof numMinAC>;\nexport type allType =\n  | startValueHandlerACType\n  | maxValueHandlerACType\n  | setBtnACType\n  | resetValueIncACType\n  | valueIncACType\n  | numMaxACType\n  | numMinACType;\n\n/*export type initialStateType = {\n  value: string | number;\n  max: number;\n  min: number;\n  isDisabledSet: boolean;\n  isDisabledBtn: boolean;\n}*/\nconst initialState = {\n  value: \"0\" as string | number,\n  max: 5,\n  min: 0,\n  isDisabledSet: false,\n  isDisabledBtn: true,\n};\nexport type initialStateType = typeof initialState;\n\nexport const counterReducer = (\n  state: initialStateType = initialState,\n  action: allType\n) => {\n  switch (action.type) {\n    case \"START_VALUE_HANDLER\": {\n        return {\n          ...state,\n          value: \"Введите данные и нажмите set\",\n          min: action.e,\n          isDisabledBtn: true,\n          isDisabledSet: false,\n        };\n    }\n    case \"MAX_VALUE_HANDLER\": {\n        return {\n          ...state,\n          value: \"Введите данные и нажмите set\",\n          max: action.e,\n          isDisabledBtn: true,\n          isDisabledSet: false,\n        };\n    }\n    case \"SET_BTN\": {\n      localStorage.setItem(\"start\", JSON.stringify(state.min));\n      localStorage.setItem(\"max\", JSON.stringify(state.max));\n      return {\n        ...state,\n        value: state.min,\n        isDisabledBtn: false,\n        isDisabledSet: true,\n      };\n    }\n    case \"RESET_VALUE_INC\": {\n      return { ...state, value: state.min };\n    }\n    case \"VALUE_INC\": {\n      if (typeof state.value === \"number\" && state.value < state.max) {\n        return { ...state, value: state.value + 1 };\n      } else return state;\n    }\n    case \"NUM_MAX\": {\n      return {\n        ...state,\n        max: action.n,\n      };\n    }\n    case \"NUM_START\": {\n      return {\n        ...state,\n        value: action.n,\n        min: action.n,\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport const startValueHandlerAC = (e: number) => {\n  return {\n    type: \"START_VALUE_HANDLER\",\n    e,\n  } as const;\n};\nexport const maxValueHandlerAC = (e: number) => {\n  return {\n    type: \"MAX_VALUE_HANDLER\",\n    e,\n  } as const;\n};\nexport const setBtnAC = () => {\n  return {\n    type: \"SET_BTN\",\n  } as const;\n};\nexport const resetValueIncAC = () => {\n  return {\n    type: \"RESET_VALUE_INC\",\n  } as const;\n};\nexport const valueIncAC = () => {\n  return {\n    type: \"VALUE_INC\",\n  } as const;\n};\nexport const numMaxAC = (n: number) => {\n  return {\n    type: \"NUM_MAX\",\n    n,\n  } as const;\n};\nexport const numMinAC = (n: number) => {\n  return {\n    type: \"NUM_START\",\n    n,\n  } as const;\n};\n","import React, { ChangeEvent, useEffect } from \"react\";\nimport s from \"./Counter.module.css\";\nimport { Table } from \"./components/Table\";\nimport { Button } from \"./components/Button\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { AppStateType } from \"./BLL/store\";\nimport {\n  initialStateType,\n  maxValueHandlerAC,\n  numMaxAC,\n  numMinAC,\n  resetValueIncAC,\n  setBtnAC,\n  startValueHandlerAC,\n  valueIncAC,\n} from \"./BLL/counterReducer\";\n\nexport const CounterRedux = () => {\n  const value = useSelector<AppStateType, initialStateType>(\n    (state) => state.counter\n  );\n\n  const dispatch = useDispatch();\n\n  const startValueHandler = (e: ChangeEvent<HTMLInputElement>) => {\n    dispatch(startValueHandlerAC(+e.currentTarget.value));\n  };\n  const maxValueHandler = (e: ChangeEvent<HTMLInputElement>) => {\n    dispatch(maxValueHandlerAC(+e.currentTarget.value));\n  };\n  const setBtn = () => {\n    dispatch(setBtnAC());\n  };\n  const valueInc = () => {\n    dispatch(valueIncAC());\n  };\n  const resetValueInc = () => {\n    dispatch(resetValueIncAC());\n  };\n\n  useEffect(() => {\n    let maxLoc = localStorage.getItem(\"max\");\n    let minLoc = localStorage.getItem(\"start\");\n    if (minLoc != null) {\n      let numMin = JSON.parse(minLoc);\n      dispatch(numMinAC(numMin));\n    }\n    if (maxLoc != null) {\n      let numMax = JSON.parse(maxLoc);\n      dispatch(numMaxAC(numMax));\n    }\n  }, []);\n\n  return (\n    <>\n      <div className={s.wrapper}>\n        <span style={{ color: \"white\" }}>max Value</span>\n        <input\n          className={s.inp}\n          type={\"number\"}\n          placeholder={\"Max value\"}\n          onChange={maxValueHandler}\n          value={value.max}\n        />\n        <br />\n        <span style={{ color: \"white\" }}>start Value</span>\n        <input\n          className={s.inp}\n          type={\"number\"}\n          placeholder={\"Start value\"}\n          onChange={startValueHandler}\n          value={value.min}\n        />\n        <br />\n        <Button\n          callback={setBtn}\n          nameButton={\"set\"}\n          disable={value.isDisabledSet}\n        />\n      </div>\n      <div className={s.wrapper}>\n        <Table value={value.value} max={value.max} min={value.min}/>\n        <div className={s.buttons}>\n          <Button\n            callback={valueInc}\n            nameButton={\"inc\"}\n            disable={value.isDisabledBtn || value.value === value.max}\n          />\n          <Button\n            callback={resetValueInc}\n            nameButton={\"reset\"}\n            disable={value.isDisabledBtn}\n          />\n        </div>\n      </div>\n    </>\n  );\n};\n\n/*    const [value, dispatchValue] = useReducer(ValueReducer, initialState);\n  const startValueHandler = (e: ChangeEvent<HTMLInputElement>) => {\n\tdispatchValue(startValueHandlerAC(+e.currentTarget.value));\n  };\n  const maxValueHandler = (e: ChangeEvent<HTMLInputElement>) => {\n\tdispatchValue(maxValueHandlerAC(+e.currentTarget.value));\n  };\n  const setBtn = () => {\n\tdispatchValue(setBtnAC());\n  };\n  const valueInc = () => {\n\tdispatchValue(valueIncAC());\n  };\n  const resetValueInc = () => {\n\tdispatchValue(resetValueIncAC());\n  };\n  useEffect(() => {\n\tlet maxLoc = localStorage.getItem(\"max\");\n\tlet minLoc = localStorage.getItem(\"start\");\n\tif (minLoc != null) {\n\t  let numMin = JSON.parse(minLoc);\n\t  dispatchValue(numMinAC(numMin));\n\t}\n\tif (maxLoc != null) {\n\t  let numMax = JSON.parse(maxLoc);\n\t  dispatchValue(numMaxAC(numMax));\n\t}\n  }, []);*/\n","import React from \"react\";\nimport \"./App.css\";\nimport { Counter } from \"./Counter\";\nimport { CounterRedux } from \"./CounterRedux\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <CounterRedux />\n    </div>\n  );\n}\n\nexport default App;\n","import { combineReducers, createStore } from \"redux\";\nimport { counterReducer } from \"./counterReducer\";\n\nconst rootReducer = combineReducers({\n  counter: counterReducer,\n});\nexport type AppStateType = ReturnType<typeof rootReducer>;\n\nexport const store = createStore(rootReducer);\n\n// типизация всего стора\n// type AppStoreType = typeof store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./BLL/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}